
-----------------------------------------------------------------------------------------------------------------------------------------------------------------

Algoritmo para determinar si se forman ciclos[editar]
Algoritmo: Para determinar si al agregar una arista a una grafo se forma algún ciclo

//Siendo una arista nueva con nodos adyacentes A y B

1. Tomamos cualquier nodo adyacente a la arista que vamos a generar (Por ejemplo A)

2. Verificamos que no tenga aristas hacia B, y de ser así lo marcamos

3. Repetimos el proceso (2) con cada uno de los nodos adayacentes al nodo A y hasta marcar todos los nodos conectados.

4. Si en todo el recorrido no encontró ninguna arista hacia B, entonces no se generan ciclos al agregar la arista nueva.




-----------------------------------------------------------------------------------------------------------------------------------------------------------------

bool Grafo::dfs(int v)
{
	stack<int> pilha;
	bool visitados[V], pilha_rec[V];

	// inicializa visitados y pilha_rec con false
	for(int i = 0; i < V; i++)
		visitados[i] = pilha_rec[i] = false;

	// hace un dfs
	while(true)
	{
		bool achou_vizinho = false;
		list<int>::iterator it;

		if(!visitados[v])
		{
			pilha.push(v);
			visitados[v] = pilha_rec[v] = true;
		}

		for(it = adj[v].begin(); it != adj[v].end(); it++)
		{
			//si el vecino ya está en la pila es porque no hay ciclo
			if(pilha_rec[*it])
				return true;
			else if(!visitados[*it])
			{
				// si no está en la pila, no fue visitado, indica que el pensamiento
				achou_vizinho = true;
				break;
			}
		}

		if(!achou_vizinho)
		{
			pilha_rec[pilha.top()] = false; // marca se mueve de la pila
			pilha.pop(); // remove da pilha
			if(pilha.empty())
				break;
			v = pilha.top();
		}
		else
			v = *it;
	}

	return false;
}

bool Grafo::temCiclo()
{
	for(int i = 0; i < V; i++)
	{
		if(dfs(i))
			return true;
	}
	return false;
}

------------------------------------------------------------------------------------------------------------------------------------------------------------------
COMO SABER SI UN GRAFO ES UN ARBOL

En teoría de grafos, un árbol es un grafo en el que cualesquiera dos vértices están conectados por exactamente un camino
|||
Definición.- Un grafo se dice un árbol si es conexo y no tiene ciclos.

------------------------------------------------------------------------------------------------------------------------------------------------------------------
grafo conexo

public boolean conexo() {
	Object[][] rsult = generaMatrizAdyacencia();
	int x = 0;
	if (rsult.length > 0) {
		for (int i = 0; i < rsult.length - 1; i++) {
			for (int j = 0; j < rsult.length - 1; j++) {
				if (i != j) {
					if ((Integer) rsult[i][j] == 0 && (Integer)rsult[j][i] == 0) {
						x += 1;
					}
				}
			}
			if (x == rsult.length - 1) {
				return false;
			}
			x = 0;
		}
	return true;
	}else{
		return false;
	}
}